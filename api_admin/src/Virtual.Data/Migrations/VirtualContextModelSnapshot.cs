// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Virtual.Data.Context;

namespace Virtual.Data.Migrations
{
    [DbContext(typeof(VirtualContext))]
    partial class VirtualContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Virtual.Domain.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("tb_Cidade");
                });

            modelBuilder.Entity("Virtual.Domain.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdJogador");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdUsuarioCadastro")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("tb_Jogador");
                });

            modelBuilder.Entity("Virtual.Domain.Models.JogadorJogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdJogadorJogo");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gols")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("IdJogador")
                        .HasColumnType("int");

                    b.Property<int>("IdJogo")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuarioCadastro")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("IdJogador");

                    b.HasIndex("IdJogo");

                    b.ToTable("tb_JogadorJogo");
                });

            modelBuilder.Entity("Virtual.Domain.Models.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdJogo");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Campo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataJogo")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Gols")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("GolsAdversario")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("IdAdversario")
                        .HasColumnType("int");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuarioCadastro")
                        .HasColumnType("char(36)");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdAdversario");

                    b.HasIndex("IdCidade");

                    b.ToTable("tb_Jogo");
                });

            modelBuilder.Entity("Virtual.Domain.Models.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTime");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdUsuarioCadastro")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("tb_Time");
                });

            modelBuilder.Entity("Virtual.Domain.Models.JogadorJogo", b =>
                {
                    b.HasOne("Virtual.Domain.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("IdJogador")
                        .IsRequired();

                    b.HasOne("Virtual.Domain.Models.Jogo", "Jogo")
                        .WithMany("Jogadores")
                        .HasForeignKey("IdJogo")
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Jogo");
                });

            modelBuilder.Entity("Virtual.Domain.Models.Jogo", b =>
                {
                    b.HasOne("Virtual.Domain.Models.Time", "Adversario")
                        .WithMany()
                        .HasForeignKey("IdAdversario")
                        .IsRequired();

                    b.HasOne("Virtual.Domain.Models.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .IsRequired();

                    b.Navigation("Adversario");

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Virtual.Domain.Models.Jogo", b =>
                {
                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
